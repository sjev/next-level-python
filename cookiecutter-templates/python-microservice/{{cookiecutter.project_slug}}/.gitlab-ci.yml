#image: python:3.12-slim-bullseye
image: $CI_REGISTRY_IMAGE:dev

variables:
  DEV_IMAGE: $CI_REGISTRY_IMAGE:dev

stages:
  - build_dev
  - test_package
  - build_package

before_script:
  - python --version

# Build dev image
build_dev:
  image: docker:latest
  services:
    - docker:dind
  stage: build_dev
  before_script:
    - apk add --no-cache git
    - docker version
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker build -t $DEV_IMAGE -f .devcontainer/Dockerfile .
    - docker push $DEV_IMAGE
  when: manual

lint_and_test:
  stage: test_package
  script:
    - pip install .
    - ruff src
    - mypy src
    - pytest -v tests
  only:
    changes:
      - src/**/*
      - .gitlab-ci.yml

# and build package
package:
  stage: build_package
  script:
    - python -m build
    - pip install twine
    - TWINE_PASSWORD=${CI_JOB_TOKEN} TWINE_USERNAME=gitlab-ci-token python -m twine upload --repository-url ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/pypi dist/*
  rules:
    - if: $CI_COMMIT_TAG
